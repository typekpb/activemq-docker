on:
  # Triggers the workflow nightly (at midnight)
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force:
        type: boolean
        description: "Whether all the tags are to be re-pushed to docker hub, regardless whether they already exist or not."
        required: false
        default: false

env:
  URL_RELEASES: "https://archive.apache.org/dist/activemq"
  URL_TAGS: "https://registry.hub.docker.com/v2/repositories/butkovic/activemq/tags?page_size=1024"

jobs:

  identify:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      latest: ${{ steps.matrix.outputs.latest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.5
      - name: Set up Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - id: matrix
        run: |
          if [[ "${{ github.event.inputs.force }}" == "true" ]]
          then
            ARG_FORCE="--force"
          else
            ARG_FORCE=""
          fi
          echo dry run
          python print_versions.py -r $URL_RELEASES -t $URL_TAGS $ARG_FORCE
          python print_versions.py -r $URL_RELEASES -t $URL_TAGS --latest-only $ARG_FORCE
          echo assigning job outputs
          echo "::set-output name=matrix::$(python print_versions.py -r $URL_RELEASES -t $URL_TAGS $ARG_FORCE)"
          echo "::set-output name=latest::$(python print_versions.py -r $URL_RELEASES -t $URL_TAGS --latest-only $ARG_FORCE)"

  publish:
     needs: [ identify ]
     runs-on: ubuntu-latest
     strategy:
       matrix:
         version: ${{fromJson(needs.identify.outputs.matrix)}}
     if: |
       github.ref == 'refs/heads/main' &&
       ${{ fromJson(needs.identify.outputs.matrix) != '[]' && fromJson(needs.identify.outputs.matrix) != '' }}
     steps:
       - name: Checkout
         uses: actions/checkout@v2.3.5
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v2.0.0
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2.0.0
       - name: Login to DockerHub
         uses: docker/login-action@v2.0.0
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Build and push from openjdk 7
         uses: docker/build-push-action@v3.1.1
         if: |
           startsWith(matrix.version, '5.9') == true ||
           startsWith(matrix.version, '5.10') == true || 
           startsWith(matrix.version, '5.11') == true || 
           startsWith(matrix.version, '5.12') == true || 
           startsWith(matrix.version, '5.13') == true
         with:
           push: true
           build-args: |
              ACTIVEMQ_VERSION=${{ matrix.version }}
              BASE_IMG=openjdk:7
           file: Dockerfile.openjdk
           tags: butkovic/activemq:${{ matrix.version }}
           platforms: |
             linux/amd64

       - name: Build and push from amazoncorretto 8
         uses: docker/build-push-action@v3.1.1
         if: |
           startsWith(matrix.version, '5.14') == true ||
           startsWith(matrix.version, '5.15') == true
         with:
           push: true
           build-args: |
             ACTIVEMQ_VERSION=${{ matrix.version }}
             BASE_IMG=amazoncorretto:8
           file: Dockerfile.amazoncorretto
           tags: butkovic/activemq:${{ matrix.version }}
           platforms: |
             linux/amd64
             linux/arm64/v8

       - name: Build and push from amazoncorretto 8 alpine
         uses: docker/build-push-action@v3.1.1
         if: |
           startsWith(matrix.version, '5.14') == true ||
           startsWith(matrix.version, '5.15') == true
         with:
           push: true
           build-args: |
             ACTIVEMQ_VERSION=${{ matrix.version }}
             BASE_IMG=amazoncorretto:8-alpine-jre
           file: Dockerfile.amazoncorretto.alpine
           tags: butkovic/activemq:${{ matrix.version }}-alpine
           platforms: |
             linux/amd64

       - name: Build and push from amazoncorretto 11
         uses: docker/build-push-action@v3.1.1
         if: |
           startsWith(matrix.version, '5.9') == false ||
           startsWith(matrix.version, '5.10') == false || 
           startsWith(matrix.version, '5.11') == false || 
           startsWith(matrix.version, '5.12') == false || 
           startsWith(matrix.version, '5.13') == false ||
           startsWith(matrix.version, '5.14') == false ||
           startsWith(matrix.version, '5.15') == false
         with:
           push: true
           build-args: |
              ACTIVEMQ_VERSION=${{ matrix.version }}
              BASE_IMG=amazoncorretto:11
           file: Dockerfile.amazoncorretto
           tags: butkovic/activemq:${{ matrix.version }}
           platforms: |
             linux/amd64
             linux/arm64/v8

       - name: Build and push from amazoncorretto 11 alpine
         uses: docker/build-push-action@v3.1.1
         if: |
           startsWith(matrix.version, '5.9') == false ||
           startsWith(matrix.version, '5.10') == false || 
           startsWith(matrix.version, '5.11') == false || 
           startsWith(matrix.version, '5.12') == false || 
           startsWith(matrix.version, '5.13') == false ||
           startsWith(matrix.version, '5.14') == false ||
           startsWith(matrix.version, '5.15') == false
         with:
           push: true
           build-args: |
              ACTIVEMQ_VERSION=${{ matrix.version }}
              BASE_IMG=amazoncorretto:11-alpine
           file: Dockerfile.amazoncorretto.alpine
           tags: butkovic/activemq:${{ matrix.version }}-alpine
           platforms: |
             linux/amd64

  publish-latest:
     needs: [ identify ]
     runs-on: ubuntu-latest
     strategy:
       matrix:
          version: ${{fromJson(needs.identify.outputs.latest)}}
     if: |
       github.ref == 'refs/heads/main' &&
       ${{ fromJson(needs.identify.outputs.latest) != '[]' && fromJson(needs.identify.outputs.latest) != '' }}
     steps:
       - name: Checkout
         uses: actions/checkout@v2.3.5
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v2.0.0
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2.0.0
       - name: Login to DockerHub
         uses: docker/login-action@v2.0.0
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Build and push latest from amazoncorretto 11
         uses: docker/build-push-action@v3.1.1
         with:
           push: true
           build-args: |
             ACTIVEMQ_VERSION=${{ matrix.version }}
             BASE_IMG=amazoncorretto:11
           file: Dockerfile.amazoncorretto
           tags: butkovic/activemq:latest
           platforms: |
             linux/amd64
             linux/arm64/v8
